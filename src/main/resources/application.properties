spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=cisco
spring.jpa.show-sql=true
server.port=8000
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.mvc.hiddenmethod.filter.enabled=true
spring.security.oauth2.client.registration.keycloak.client-id=myclient
spring.security.oauth2.client.registration.keycloak.client-secret=DrEQrfWBEIB6r4dlRkWRFVLFT45pkPM1
spring.security.oauth2.client.registration.keycloak.scope=openid, profile
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#    spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/auth/realms/myrealm
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://auth.chord.collector/realms/myrealm

#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://chord.collector:8180/auth/realms/myrealm/.well-known/openid-configuration
#spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8000/

#spring.security.oauth2.client.provider.keycloak.authorization-uri=http://chord.collector:8180/auth/realms/myrealm/protocol/openid-connect/auth?
#spring.security.oauth2.client.provider.keycloak.token-uri=http://chord.chollector:8180/oauth2/token
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.provider.keycloak.user-info-authentication-method=client_secret_basic
keycloak.server-url=http://auth.chord.collector/auth
#keycloak.server-url=http://localhost:8180/auth
keycloak.realm=myrealm
keycloak.username=admin
keycloak.password=adminpass
server.servlet.session.tracking-modes=cookie

